<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.songm.acc.dao.impl.UserReportDaoImpl">
	<resultMap id="BaseResultMap" type="cn.songm.acc.entity.UserReport">
		<id column="no" property="no" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="created" property="created" jdbcType="TIMESTAMP" />
		<result column="updated" property="updated" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="ses_id" property="sesId" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="rtime" property="rtime" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="table_name"> acc_user_report </sql>

	<sql id="Base_Column_List">
		no, version, created, updated, remark, ses_id, user_id, rtime
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table_name" />
		where no = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		<include refid="table_name" />
		where no = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="cn.songm.acc.entity.UserReport">
		insert into
		<include refid="table_name" />
		(no, version, created, updated, remark, ses_id, user_id, rtime)
		values (#{no,jdbcType=VARCHAR},
		#{version,jdbcType=INTEGER},
		#{created,jdbcType=TIMESTAMP},
	    #{updated,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR}, #{sesId,jdbcType=VARCHAR},
		#{userId,jdbcType=BIGINT}, #{rtime,jdbcType=TIMESTAMP}
	</insert>

	<update id="updateByPrimaryKey" parameterType="cn.songm.acc.entity.UserReport">
		update
		<include refid="table_name" />
		set updated = #{updated,jdbcType=TIMESTAMP}, version = version +1
		<if test="remark != null">, remark = #{remark,jdbcType=VARCHAR}</if>
		where no = #{no,jdbcType=VARCHAR}
	</update>
	<!-- 根据搜索条件获取数据 -->
	<sql id="condition_sql">
		<!-- Equal query -->
		<if
			test="beginDate != null and endDate != null and endDate !='' and beginDate != ''">
			and created between #{beginDate} and
			CONCAT(#{endDate},'23:59:59')
		</if>
		<!-- 是否行锁，要放在查询条件最后 -->
		<if test="isPessimist != null and isPessimist == true "> for update</if>
	</sql>

	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table_name" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by created desc
	</select>
	
	<select id="listByColumn" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from
        <include refid="table_name" />
        <where>
            <include refid="condition_sql" />
        </where>
        order by created desc
    </select>
    
    <select id="countByColumn" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) from
        <include refid="table_name" />
        <where>
            <include refid="condition_sql" />
        </where>
    </select>

	<!-- 分页查询 -->
	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table_name" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by created desc limit #{pageFirst}, #{pageSize}
	</select>

	<!-- 分页查询时要用到的总数统计 -->
	<select id="listPageCount" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select count(1) from
		<include refid="table_name" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

</mapper>